{"version":3,"sources":["../node_modules/bnc-onboard/node_modules/ethereumjs-tx/node_modules/bn.js/lib/bn.js","../../src/secp256k1v3-lib/index.ts","../../src/secp256k1v3-lib/der.ts","../src/secp256k1v3-adapter.ts","../src/constants.ts","../src/bytes.ts","../src/hash.ts","../src/account.ts","../src/signature.ts","../src/object.ts","../src/index.ts","../src/transaction.ts","../src/fake.ts"],"names":[],"mappings":";AAAA;AEAA,ADAA,ADCA,AUDA,0CRA0C,ADAA,GSAY;ARCtD,ADAA,ADCA,AUFS,oCAAA,OAAO,CAAe,yBRCsC,ADAA;ADErE,AOHA,AFAA,ADAA,AEAM,AICN,ADDA,ANAA,AKAA,IDAM,AFAA,ACAA,AGAA,ANAA,AKAA,KFAuD,CCAjD,AEAA,GFAG,AFAA,AIAA,ANAA,AKAA,GHAG,ACAkD,AHAlD,AKAA,CFAmD,GCA/C,AEAA,CFAC,AEAA,EJAE,AFAA,AKAA,CHAC,AFAA,AKAA,EJAE,GGAG,AEAA,CFAC,AEAA,CFAA,AGCmB,ADDnB,KJAM,CAAC,CAAA,SCA4D,AEAlD,CFAmD,AEAlD,CAAA,CFA1C,OHAmD,CAAC,CGA3C,AHA2C,eGA3C,EAAE,SAAS,eAAA,EAAa,IAAI,eAAA,EAAE,SAAS,eAA4C,CAAA;AJKpG,ADFA,ADCA,AOHA,AFAA,ADCA,AEDA,AIAS,ADAT,ANAA,AKAA,INIM,AKJA,ADAA,AGAA,ANAA,SIAS,AEAA,CHAC,CHAC,CIAC,AEAA,CHAC,CHAC,KIAK,AEAA,CFAC,ADAA,AGAA,CHAC,AHAA,CFEC,AIFA,AFAA,AKAA,OEAnB,GRI6B,AKJA,AEAA,CFAC,AEAA,CFAA,ADAC,AGAD,CPIE,AIJA,CAAA,AIAzB,CAAmB,IRIY,CAAC,IAAI,CAAC,ACJA,CAAC,CAAA;AFGtD,ADCA,AOHA,AFCA,ACDA,AGAA,ANAA,AKAA,INIE,ADFI,AMFA,ADAA,AHAA,EFEE,CEFC,EFEE,CEFC,EDIF,CKJK,ADAA,GLEG,AMFA,ADAA,CLEC,AEFA,CAAC,KIAK,ADAA,CCAC,ADAA,CGAC,EREE,CAAC,CAAC,EAAE,CAAA,COFwC,GFAnC,CAAC,CAAA,GHAI,CAAC,CAAA,IIAK,CAAC,CAAA;ANIlD,ADAA,AOHA,ADAA,AGAA,ANuBA,AKvBA,GJCG,CFGD,ADDI,EAAE,ECCF,CDDK,IAAI,EAAE,CAAC,SKHS,CCAC,CNGC,CAAC,CAAA,EOHC,ECAyB;ARIxD,ADAA,AOHA,AHCa,AEDb,AGCA,ADMA,INHE,ADDI,ICCA,AEHO,IHEC,GAAG,EAAE,CAAC,CGFI,GAAO,CHEN,CAAA,EGFU,EAAE,CACnC,IGFyE,ADA9B,8DFEuB,EAClE,EAAE,CACH,CAAA;AHMD,ADNA,AOHA,AHKA,AEJA,GDAG,CHGD,GDKK,CCLD,ADKE,gBAAgB,GAAG,IMTwB,MNSf,UAAkB,EAAE,UAA0B;ADLlF,AOFA,AFAa,GGMV,CNHD,ADIsD,ICJlD,AGHO,KAAK,GAAG,UAAS,KJO0B,AIPb,EJOa,iBAA0B;ADJlF,AQIa,GJFV,CFDD,ADIA,AIPA,IHGI,ADIE,AODK,CPCJ,EIPA,CJOG,EODO,EPCH,CIPD,AGMO,CPCJ,AIPF,CJOG,QOAjB,EPA2B,AIPF,CJOG,AIPF,CJOE,GOAb,CHPgB,CAAC,AGQhC,CHRiC,IAAI,CAAC,CAAC,CAAC,CAAA,CGQtB,EAClB,OAAgB;ARNlB,AKFA,ADIa,CCJZ,CAAA,CEAE,AJsBA,CDnBD,ADIA,AOGA,INPI,ADIA,AGHO,AIML,CPHD,CAAC,COGG,GPHC,AOGE,CPHD,GGHU,GAAO,EHGT,AOGE,CPHD,AOGE,CPHD,AGHW,CHGV,CGHY,CAClC,AIK0B,CAAC,CPHD,CAAC,EAAE,GOGK,EAAE,UAAU,CAAC,CAAA,6CJLoB,EACnE,EAAE,CACH,CAAA;AJJD,AOFa,AFCb,ADOA,AMlBA,APgCa,AQhCb,ITaE,AQbI,AFoBJ,INPI,ADIF,AMPS,AJsBA,AKZL,KEpBO,CTiBL,ESjBQ,AFoBF,EPHF,CMPU,ACUG,GDVA,ACUG,CPHX,ASjBM,AFoBM,CPHX,ASjBM,APgCG,GAAG,IKZO,CAAA,KLYE,UOhCQ,APgCU,COhCT,CAAA,ECW1B,IVM2B,CAAC,CAAA;ADJpD,AUMS,ACPT,GLDG,CJGD,AKHA,AJsBA,AKXA,CPJC,GCJG,AKHE,ACWA,GAAG,GAAG,ODXO,GAAG,EAAE,CAAA,GGQR,yBCPoB,YRqB2B;AHnBjE,AYdA,ANYa,AIXb,ACYA,GPOG,CFLD,ADKA,AMRA,AGXI,APiCJ,IFdM,AMRA,ADAK,AHsBP,AKXF,CAAC,EAAE,CDXK,CNQC,ASnBE,CJWI,AEWT,CDXK,ACWJ,CPHK,ASnBE,CJWI,CJGN,ADKE,AEcF,CFdG,AEcF,CFdG,CAAC,ESnBI,CTmBD,ASnBE,AFsBN,CPHK,AEcF,AKXF,CPHK,CAAC,AKRI,CLQJ,AMRP,ADAiB,CCAhB,CDAkB,AHsBX,AKXF,CAAC,CLWG,AKXF,CGVG,CLD0B,AHsBzB,AKXF,EEtBQ,AFsBN,CEtBO,AFsBN,CEtBM,IHWL,CAAC,CAAA,OKZO;AZe1C,AIMa,AQpBb,AFCA,ACcA,ITAE,ADKA,AMRA,ADDqC,IJIjC,AEKO,ADcT,AKXA,CAAC,EPHI,AMRA,ACWF,GAAG,CLWC,AKXA,AGRI,KRmBC,CAAA,CFdI,CAAC,CGAQ,AIGT,CFZmB,AEYlB,CEtBO,CNoB1B,AEVqC,CLSb,CAAC,CMRP,ACWM,CDXL,ACWM,EPHI,AWpBA,AJuBF,EPHI,AMRR,ACWM,CDXL,CNQS,AMRT,ADD+B,AEYxB,CAAC,IPHM,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,CAAA,8BGCQ,CAAA;AHApE,ADNA,AOFA,AHUA,AQrBA,AFMS,ACQT,CVKC,AMRA,CNQA,AMRA,ELGC,AIJA,AKII,CRmBH,GDnBG,AIJA,AEYF,CAAC,EAAE,AGRM,GAAG,CLJH,CAAC,AIJH,EFgBG,AGRM,CHQL,CAAC,CFZG,AEYF,QFZU,AEYF,GAAG,CFZG,AEYF,CFZG,IKIV,CAAC,CHQa,GFZK,AEYF,CFZG,AEYF,CItBD,EJsBI,EAAE,CAAC,CAAC,CAAC,CAAC,EFZI,CAAC,CAAC,CAAC,EAAE,CEYD,GAAG,EAAE,uCGR2B,EAAE,EAAE,CAAC,CAAA;AVO9F,ADPA,AODA,AKXA,AFFA,ACgBA,GFJG,CPGD,ACoBA,CKZC,CAAA,CPFI,CCND,ADME,AKVJ,CAAC,EHwBI,CGxBD,MAAM,CAAC,CHwBG,CAAC,EGxBA,CAAC,CAAC,AIXM,EJWJ,CLUK,GAAG,EKVF,CAAC,CAAA,EHwBK,CAAC,GFdI,OEcM,CAAC,EFdW,EEcP,CAAC,UAAU,CAAC,CAAC,CAAA;AHpBhE,AUJS,ADEI,ANuBb,CAAC,CAAA,CCbE,CFPD,ADMA,AOGA,CFbC,GJIG,ADME,AQTK,ERSH,COGD,EPHI,COGD,CAAA,EPHK,CSXL,CTWO,CAAC,IQTS,GAAG,GRSF,CAAC,CAAA,KQTU,IAAS,EAAE,MAAW,EAAE,IAAS;ATG1E,AIQa,AMvBb,APqCA,AKZA,CAAC,CAAA,CDXE,AFAA,AMGA,CTDD,ADMA,AQTA,ECbI,CAAC,CRgBD,ADMA,AGCO,AKVP,CHFG,AGEF,CRSC,CAAC,CQTC,CCbG,CAAC,CTsBD,AQTA,CRSC,CQTC,CAAA,GCbM,CNuBM,CMvBJ,CTsBD,CAAC,AGCe,CHDd,CAAC,IAAI,AGCe,CHDd,AGCe,AMvBb,CAAC,CAAA,ETsBC,AGCe,CAAC,CHDd,CAAC,MAAM,EAAE,EAAE,YGCmB,EAAE,KAAK,CAAC,CAAA;AJP1E,AODa,AFAA,ADUb,AMRA,AFUA,AGTA,ITDE,AOHA,IPGI,ADMF,AMRS,AFAA,ACHT,AGEE,CHFD,AGEE,GHFC,ELWE,EQTI,ERSA,CQTG,EJCS,AIDP,CFCQ,AEDR,CRSA,CAAC,AIRS,CEAC,GDHd,CAAC,CAAC,CAAC,CAAA,EDGmB,CEAC,EFAO,EAAE,GEAM,GFAQ,EAAE,KAAsB,EJQpC,CAAC,CAAA;ADNnD,IECE,AKFA,AFD8D,AIC9D,AEkBA,CVVC,AKXA,GJKG,GKFG,eFDuD,AICxC,EJDwC,IEClC,CAAC,IAAI,CAAC,GFDkD,IEC3C,CAAC,CAAA;APE5C,AODA,CAAC,CAAA,CHUE,AMRA,CRAD,ADOA,AIVA,ACDA,AGEA,IPEI,AGHE,ACDF,AGEA,CHFC,AGEA,ERSE,AIVE,EJUA,AKXA,CLWC,AIVE,CICD,GRSG,AQTA,CRSC,QAAQ,AIVN,CJUO,AIVN,AICK,CRSE,CAAC,CAAC,EQTkB,CJDrB,CAAC,CAAA,MJUa,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;AAC1D,ADRA,AOAA,AHSa,AMRb,CTOC,CAAA,COGE,CNVD,AGHA,GAAG,CHGC,AEQO,AEbA,AGEY,EJAjB,ECFS,GAAG,GAAG,CAAA,ODEP,CAAC,EDWiB,CCXd,AIAK,CJAJ,CAAA,ADYnB,AKZuB,aAAsB,CCGpB,oDNSyC,CAAA;AHApE,ADTA,AIWA,AMTA,AFSa,INVX,AGHA,ACDA,GLYK,CCRD,ADQE,AIXF,AIAF,ADaS,IFdH,AGCF,CJAG,EAAE,CCDC,CGCD,ADaS,CFdN,CGCD,CDaU,GPFF,GAAG,IOGxB,MPHiC,COGlB,EACf,CAAS,EPJsC,AOK/C,CAAS,EACT,CAAS,EACT,OAAgB;ARflB,GOAG,AJsBA,CDrBD,ADQA,AOQA,INhBI,ADQA,AIXF,ACDA,AEoBI,CPRD,GAAG,AIXF,AICF,CHFG,EDCE,CJWG,AIXF,ACDA,AGEA,CHFC,AEoBI,CPRD,AKZF,CLYG,COQG,CClBL,CJDG,EICM,CRUD,AIXF,CJWG,AQVE,ADkBA,CPRD,AQVC,ADkBC,CPRD,CAAA,EIXC,EAAE,AGmBI,CAAC,CAAC,iBAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,iBAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;ARhB3E,AOAa,AJsBA,GCXV,AMTA,CRDD,ADQA,AOQA,INhBI,ADQA,AMTO,AJsBA,AKLL,CPRD,CAAC,EIXF,ACDA,AGEA,ERUM,CAAC,AIXJ,CAAC,AICA,ADkBM,CClBL,EHFE,AEoBM,CHnBL,CEEY,AFFX,EJWM,CAAC,AMTO,AFFX,AICA,ANuBW,CFbN,AIXJ,AICA,CRUK,AIXL,CFwBa,CGzBV,CAAC,CLYK,AKZJ,CLYK,AKZJ,CAAA,AGEC,CRUK,AQVJ,CFCW,GJsBG,EKLF,CAAC,CDjBa,ACiBZ,EClBb,ADkBe,ILKgB,CMvBlB,CNuBoB,CKLX,CAAC,CAAA,OLK8B;AHrBjF,AIWa,AMTb,GEdG,CVaD,AKDA,AJsBA,AKLA,INhBI,ADQF,AMTI,AHWK,AIMP,CPRD,AKZA,AEoBE,GPRC,AIXF,IJWM,AMTI,AEDR,ERUM,CAAC,AMTI,AFFN,CJWG,CAAC,AQVN,CRUM,AIXD,AICJ,CJDI,IDagB,AKZf,ADkBQ,CClBP,ADkBQ,EJNiB,CKZtB,KLY4B,AIMf,CJNgB,AIMf,CDjBL,AEDJ,CDkBW,CDjBL,CAAA,AHWsB,CAAC,AKZzB,CAAC,CCGN,IDHW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAG,CAAA,CNuBU,ICXW,EAAE,KAAK,CAAC,CAAA;AJVpF,AIYA,AQxBA,AFeA,IRFE,AKDA,AJsBA,CFbC,GCRG,AIJF,AHyBE,AKLF,CHnBC,EEEI,CEDH,CHFG,AGEF,CAAC,ADkBE,CClBF,CHFI,CAAC,CAAC,AHyBE,AKLF,CDjBG,AJsBA,IKLE,CDjBG,ACiBF,CLKG,KAAK,EAAE,EAAE,UItBE,CAAC,MCiBY,CDjBL,ACiBM,CDjBL,ACiBK,CDjBL;APC3C,AOAA,CAAC,CAAA,ELCC,ADSA,AWvB2C,CJ8B1C,GNhBG,ADSA,AIZF,AFwBA,CFZG,GAAG,AKbJ,AGEA,ENuBI,CExBC,CJYG,EAAE,AIZF,AFwBA,CFZG,AIZF,ACDF,AGEA,IHFI,CDCG,ACDF,AGEF,CRWO,AIZF,ACDF,AGEH,CRWQ,AIZF,ACDF,CLaK,AKbL,CLaM,AIZF,AFwBA,CFZE,AEYD,KExBK,CAAC,CAAA,GOXyB,qBTmCA,CAAC,CAAA;AHrBzD,AOCA,GHWG,AMTA,CRFD,ADSA,AWjBA,AJwBA,CHnBC,AFwBA,GDrBG,ADSA,AOOE,CPPD,AKbF,AGEA,CRWG,IAAI,CAAC,KOOO,GPPC,AOOE,CPPD,CAAC,CAAC,GWhBpB,CXgBwB,CAAC,COOG,CPPD,AWhBsC,AJuBpC,EItB7B,IAA6B,CJsBO,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;ARhBtE,AIYa,AMTb,IRFE,ACsBA,AKNA,INhBI,ADSF,AGES,AQnBT,ANIA,AGEA,ANwBI,CFbH,AIbI,EGoBA,CPPD,CKbC,EGEE,CRWC,AKbA,CAAC,AH0BI,CFbH,AKbA,CLaC,CAAC,AEaI,AKNF,CPPD,AOOE,CPPF,CGEW,GAC1B,GQpBE,EAAA,AHMe,ANwBY,CMxBX,ANwBY,IMxBR,CAAC,ADkBU,CAAC,EIxBiC,AHMzC,CCIN,ADJO,CAAA,MNwBmB,CAAC,CKND,EAAE,KAAK,CAAC,CLMG,AKNF,ELMI,GKNC,CAAC,CAAC,CAAC,CAAA,GLMM,CAAC,CAAA,mBCVJ,CAAA;AJZpE,AIcA,AMVA,AFaA,CAAC,CAAA,ENhBC,AOFA,ANyBA,CFdC,AQXA,CAAA,EPEG,AGJF,AOJA,GT+BK,CE3BD,ACAF,EH2BM,CE3BD,AF2BE,CE3BD,GCAC,GDAK,GAAG,GCAC,CMJlB,ANImB,CAAC,CDAG,AOJvB,ANIqB,AH2BI,CG3BJ,AH2BK,CE3BD,OOJI,ET+BO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;AHvBhE,AGwBA,AKNA,CLMC,CAAA,EDvBC,ADUA,AQXA,IPCI,AUXJ,AHUI,CHHD,AGGE,ERWE,CIdH,GAAG,CAAC,CJcK,CAAC,AQXA,EJHF,AOHV,CPGW,AIGI,GRWG,AIdJ,CJcK,CAAC,AIdJ,CJcK,CAAC,EQXE,EJHF,GAAG,GAAG,AOHtB,CXiB2B,AIdJ,AIGI,CRWC,EWjBxB,EAAE,CPGuB,CJcK,AIdJ,CAAA,CJcM,AWjB1B,CAAC,GXiB6B,EAAE,EAAE,CAAC,CWApD,CXAsD,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAC1F,ADXA,AGyBA,CFdC,CAAA,CGGE,AMVA,CRHD,IAAI,AUNF,ANEA,AGGA,IJHE,CCAG,CMFC,CAAC,AHKA,CHHC,CAAC,CAAC,AGGA,CJHD,AIGE,GJHC,CAAA,EIGK,CAAC,GGLG,CAAC,AHKA,CAAC,GAAG,CGLA,AHKC,CAAA,CGLC,MAAM,EAAE;AXkBxC,ADZA,AIca,AMVb,IRHE,AODA,CAAC,CAAA,CRYI,CCXD,ADWE,AGEK,CCjBR,GOFC,ANEA,MLeY,CKfL,ELeQ,AGEK,CQnBV,ERmBqB,AQnBnB,IAAI,ANEA,CAAC,CFiBoB,AEjBnB,CLgBtB,AGC0C,AEjBnB,CAAA,GFiBuB,CAAC,IHD9B,EACjB,ISVyB,MTUP,EAClB,KGD8D,EAAE,GHCtC,EGD2C,CAAC,CAAA;AJbxE,AUKA,GFaG,CNjBD,ADaA,AQbA,IPAI,AGJF,CCAC,CGIG,CAAC,CGNH,GPEK,GAAG,AIIE,CJJD,AIIE,KJJG,AOFF,CPEG,CAAC,AOFF,GHMF,CGNM,CXmBtB,CIjB0B,CJiB1B,AIjB2B,CAAA,AIID,EAAE,CAAS,aRaX;ADb5B,AQkBa,INjBX,ADcA,CIlBC,GHIG,ADcE,AKlBJ,AGIA,ADiBS,IIvBP,AHME,CRcK,AQdJ,EGNA,ANEE,CLkBK,AKlBJ,AEqBS,CIvBV,ANEE,CLkBK,CAAC,AOGK,CCjBR,CAAC,IAAI,CAAC,GDiBW,CAAS,CIvBzB,AHMU,CRcK,AQdJ,ADiBgB,CPHX,AOGoB,EAAE,CCjBvB,ADiBgC,CCjB/B,CGNhB,AHMgB,ADiBiC,IPHxB,CAAC,AWpBtB,CXoBsB,AWpBrB,CJuB4D,eIvB5C,EAAE,EAAvB,CAAuB;AZMxC,AKHA,CAAC,CAAA,CKQE,CRJD,ADeA,AOEA,INjBI,ADeE,AQfJ,ADiBI,IIvBF,ANEA,ELmBQ,CWrBL,CJuBO,CPFC,AWrBN,AHME,CHJD,CEqBO,EPFE,CKnBL,CLmBO,AQfJ,CReK,GWrBb,ANEU,CAAC,EMFR,IXqBoB,CAAC,CAAA,GOEI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA,KFrBF,IAAM,CAAC,CAAA;ANIxD,AKHa,AKQb,GHJG,AJwBA,CDxBD,ADeA,AOEA,INjBI,ADeA,AInBO,AGqBP,CFrBD,AEqBE,GCjBD,EReM,CAAC,CWrBL,CPEc,EJmBL,AQfJ,CReK,AInBO,AOFb,GAAG,AHME,CAAC,CGND,EHMI,ADiBI,CPFC,AQfJ,ADiBI,CPFC,AQfJ,CReK,AQfJ,CReK,AQfL,IReS,CAAC,AOEA,CAAC,EAAE,CPFC,CInBA,CAAA,AKQf,ITWqB,CAAC,MAAM,EAAE,EAAE;ADfvD,AOCa,AFHb,AKQA,APmBa,IDxBX,CIJC,GJIG,ADeF,AMfS,AEAT,ANwBS,AKPT,CCjBC,KReK,AOEA,IPFI,AOEA,EIvBJ,GXqBS,AOEA,CPFC,AESS,AKPT,CDjBU,AKNhB,CAAC,CT8BiB,CIxBC,GKNb,GAAG,GT8BkB,CIxBC,OAAe,EAAE,AJwBA,IKPZ,CAAC,CAAA,OIvBjB,CLMmD,AKNlD,EXqB2B,CAAC,AWrBzB,CXqByB,AWrBxB,CAAA;AZMpC,AMHA,CAAC,CAAA,EJIC,AKAA,AJwBA,CFTC,AOEA,GNjBG,AOAF,GFAK,GAAG,GKNH,AHMI,MFAQ,AEAF,CFAG,AEAF,CAAM,aFAU,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA,IJwBK;AHxBhE,AMFA,GIQG,CRLD,ADgBA,AMfA,AJuBA,AKNA,INlBI,ADgBE,AMfA,IKPF,AHMA,CGNC,AHMA,CRgBO,AMfA,EEDJ,CRgBO,AMfA,KNeK,CAAC,GAAG,CAAC,GAAG,CAAC,AMfA,CEDb,CAAC,CAAC,CAAC,CFCe,AEDf,CRgBgB,CAAC,CAAA,EEQC,IIvBM,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,ACiBF,CDjBG,CAAC,EAAE,CAAA;APDrF,AUMA,IRLE,ADgBA,AMdA,AJsBA,AKNA,INlBI,AKEE,CKRH,CAAC,CXsBG,AWtBH,AJwBG,CDhBG,AEDN,ENuBM,CItBG,CEDL,CAAC,ANuBI,CMvBH,ENuBM,CAAC,CFRC,CAAC,GQfD,CAAC,CFCA,CNcM,AMdL,CNcM,AOER,CAAC,CCjBK,CAAC,CReK,CMdJ,CNcM,CEQC,AKNR,CPFS,AMdL,AEDC,ANuBI,AKNR,ICjBQ,CCIZ,CTWkB,AOER,CPFS,AMdL,ACgBH,CDhBI,AEDC,ADiBJ,CDhBI,AEDC,CNuBK,CFRC,AEQA,CAAA,CFRE,CQfH,CReK,AQfJ,EFCC,CAAC,KAAK,CAAC,AEDC,CReK,AMdN,CNcO,AQfJ,CReI,EOEb,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,qBAAa,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,gBAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;APD9F,ADjBA,AQmBA,CPFC,AOEA,CPFA,AOEA,ENlBC,AKEA,AJsBA,IDxBI,AKEA,AKPF,AT6BE,GItBG,CKPC,ELOE,EEDJ,CAAC,CFCO,AKPA,AT6BA,CItBA,CEDJ,CGNO,ET6BE,ES7BgB,CAAA,AHMnB,CAAC,ANuBM,IAAI,OMvBC,CAAC,CAAC,CAAC,ANuBM,CMvBN,ANuBO,MAAM,KAAK,EAAE,IAAI,wBAAgB,CAAC,UAAU,CAAC,EAAE;AFNvF,ADlBA,AQoBA,GFtBG,CJGD,ADiBI,AMdJ,ILHI,AULF,AT6BA,CIrBG,GKRC,CLQG,AEFJ,CFEK,CNcK,AEON,EIrBI,CNcK,AMdJ,AKRF,CAAC,CLQG,CAAC,EKRA,CLQG,CKRD,AT6BA,CAAA,EFPQ,CAAK,EAAE,AMdP,CNcY,AMdX,ENca,IMdP,EAAE,CAAC,EAAE,CNcqB,CMdnB;APH3C,AMFa,GDAV,CHGD,ADiBA,CEOC,GDxBG,ADiBA,AMdF,ADNS,ICML,AKRF,AHOA,IAAI,CReK,AWtBL,ANEY,CLoBP,AWtBJ,ELQK,ADNS,CCMR,AEDF,CGPA,AHOC,GFCK,AKRH,CLQI,CAAC,CAAC,EAAE,ADNQ,CAAM,AGKf,CFCG,CAAC,EEDA,EFCI,CAAC,EAAE,AEDF,CAAC,MAAM,EAAE,EGPjB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AZKvC,AKFa,IHGX,ADkBA,AKrBA,AH4BA,IFPI,AIrBO,COFR,CT8BG,CG5BC,CCMH,CLHK,CCyBC,CItBH,CEDD,CAAC,CRgBO,CMfH,AJsBI,CFPC,AQhBN,ANuBM,EE5BS,GAAG,ACAf,CCMK,ADNJ,CCMK,ADNJ,CCMK,ADNJ,CCMK,ADNL,CCMM,KFNe,GAAQ,AIKzB,CAAC,CJL0B,AIKzB,CFCW,AEDV,CAAA,CFCY,CAAA,EFN0B,OF4BZ,CAAC,CAAA;AHzBpD,AMFA,AH4BA,CG5BC,AH4BA,CG5BA,AH4BA,CKNE,CNnBD,AGHA,IHGI,ADkBF,CMfC,EFNI,KIKD,CRgBK,GAAG,EQhBF,CACJ,GReY,CAAC,CIrBL,AIMH,CJNI,AIMH,GReY,AIrBN,CJqBO,CIrBL,CJqBO,AQfT,CReU,CAAA,EQfN,CJNI,AIMH,CAAC,CJNI,IAAI,CAAC,AIMH,CJNG,CIO3B,eAAa,KAAK,CAAC,IAAI,4BAAuB,KAAK,CAAC,MAAM,WAAQ,CACnE,CAAA;ATLT,AKFA,ACCA,AH4BA,AKPa,CHtBZ,CAAA,EHGC,AUNA,CAAC,EDsBE,CThBC,ADkBF,AOCS,KDjBF,AEGJ,IRaM,CAAC,AOCS,CPDR,CAAC,COCU,EPDP,CAAC,CAAC,KAAK,COCS,CPDP,CAAC,CAAC,AOCgB,CPDf,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA;ADlB1C,AKDA,IHEE,AULA,AJwBA,AGHA,IThBI,ADkBF,AOCI,CPDH,CAAC,COCK,CDjBL,ECiBgB,CDjBb,EEEI,EFFA,ENgBI,AQdA,CRcC,AQdA,CAAC,EEaf,CJfgB,CAAC,CNgBG,AMhBF,AEEE,CFFD,AEEE,AEawC,CVCvC,AMhBH,ACiBO,CAAC,AGD3B,GVA0B,AOCI,CAAC,AGDF,CVAD,AOCG,EPDD,AQdA,CRcC,CAAC,EQdE,CAAC,CRcC,AQdA,CRcC,KQdK,IRcI,CQdC,CRcC,AQdA,CRcC,AQdA,CRcC,CAAA,EQdG,KAAK,CAAC,MAAM,EAAE;ATJvE,IECE,AMoBA,CPFC,GClBG,ASgBF,CJdC,OEEG,MAAM,CACJ,KAAK,CAAC,AEWZ,EAAA,IFXkB,KAAK,AEWsC,CFXrC,CAAC,MAAM,EACzB,eAAa,KAAK,CAAC,IAAI,MDc8C,4BCdjB,KAAK,CAAC,MAAQ,CACnE,CAAA;ATPT,GMDG,CJED,AMoBA,CDlBC,GLFG,AMoBA,AGJF,CVCK,EOGA,CAAC,CCbH,KDaS,KAAK,EAAE,EAAE,EGJrB,EAAA,SAA6B;AXhBjC,AMDa,IJEX,AKGA,ILHI,ADiBF,AKnBS,AEsBT,AGHA,GJdK,CEKH,EFLM,ADLO,AEsBT,CDjBE,CEKF,CRSG,AKnBS,AGUX,CDYG,EPHE,AQTF,CAAC,CAAC,CAAC,ADYE,CAAC,EPHE,AQTF,CRSG,AKnBQ,AGUV,CHVgB,AGUhB,IRSO,CAAC,EAAE,CAAC,CAAA,aOGc,CAAC,CAAA,gBGHiB;AXjBhE,AOIA,CAAC,CAAA,CFLE,AF4BA,CD1BD,AIFA,CAAC,AEsBA,GNpBG,ADiBF,AKnBE,AGUF,AESA,CFTC,GESG,IAAI,CVAC,AUAA,CVAC,CAAC,CAAC,GAAG,AUAA,CLnBL,CAAC,AKmBM,CLnBL,CLmBO,AKnBN,CLmBM,AKnBN;ANEjB,AOKA,AFNa,AF4BA,ID1BX,AIFA,AEuBA,GI1BG,CVKC,ADiBF,AInBS,AIWT,ANiBS,AKLP,CPJD,AOIE,CPJD,CKnBG,CEuBC,AGJJ,CNnBY,CIWR,CAAC,ADYE,CHvBQ,AGuBP,AGJJ,EHIM,CAAC,CAAA,AGJH,CVAG,AKnBE,AKmBJ,CVAG,AKnBE,EH4BS,EE5BC,AMmBV,CNnBgB,AF4BJ,CFTR,CQRC,CRQC,AKnBE,AGWF,AEQF,CLnBK,GLmBC,AQRA,AEQF,CAAC,CVAG,AQRA,CNiBS,CFTP,CAAC,CAAC,CQRC,CAAC,CEQD,CVAG,CAAC,AUAF,CFRG,CNiBiB,CMjBf,MRQM,EAAE,CAAC,CAAC,CAAA;ADjBtD,IECE,AGFA,AOHA,AT+BA,AKLA,CHvBC,GHEG,ADiBF,AInBE,CJmBD,AKnBA,CLmBC,CESG,CMjBH,GHXK,CAAC,AKmBJ,CNnBO,ACAF,AH4BE,CE5BC,ACAF,AH4BE,GFTC,CAAC,AQRF,ANiBI,AQTN,CRSO,CMjBH,EEQA,EVAM,AQRF,ERQI,CUAH,CNnBO,AF4BA,AQRpB,CNpBqB,AF4BA,CFTD,AInBE,AOH1B,CPG2B,CJmBD,AInBC,COH/B,CXsBgC,CAAC,CAAC,IAAI,CAAC,EWtBlC,ET+BwC,CAAC,EKLE,EPJA,EAAE,EAAE,CAAC,CAAA,AESG,CAAC,ES/B7B,ET+BiC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,8CQR2B,CAC/F,CAAA;AXnBT,AG2BA,CAAC,CAAA,ED1BC,AGFA,AGuBA,CPJC,GCjBG,AGFA,AOJC,AJ2BD,CFvBD,AEuBE,GCZD,ADYI,CHvBC,AMqBJ,CHEK,CFvBD,CDAG,AGuBA,CHvBC,ACAF,CDAG,ACAH,CDAI,CAAC,CAAA,GIWA,EAAE,IAAI,WGfjB,EAAA,uBAAuB;AZM9B,AMDA,AH6BA,CG7BC,CAAA,EJEC,ADkBA,AIpBA,IHEI,AUNF,AJ2BA,CAAC,EPHI,AIpBA,CAAC,AOJF,AHeF,AEWA,CNtBK,AGuBF,ECZA,ADYE,CAAA,AGDD,CFXC,AEWA,ENtBM,CJoBC,CAAA,CIpBE,CAAC,AIWJ,CEWC,GNtBO,AMsBJ,CC1BG,GD0BC,CNtBK,AOJF,AD0BF,CNtBK,GOJC,CAAC,CD0BD,CAAA,ENtBO,COJD,CPIG,GOJC,EPII,EOJA,CPIG,AOJF,EPII,GOJC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;AXyB7E,ADnBA,AMAA,CLmBC,CAAA,CMdE,CLJD,CMqBC,GNrBG,AGFF,CAAC,AMsBA,GNtBG,AOJF,AHeA,CJXG,CAAC,CIWD,EAAE,EJXI,CAAC,CAAC,CAAC,CAAA,AIWD,wDGfwD;AZMzE,AOKa,ILJX,AMsBA,INtBI,AKIO,AFNT,CIWC,CAAC,CAAA,ADaG,CI5BH,CPIG,AMqBE,GNrBC,AOJA,CPIC,CAAC,CAAC,CAAC,CAAA,EOJG,GAAG,ILUa,GAAG,QKVV,CAAC,CLUkB,KKVZ,CAAC,CLU0B,AKVzB,ELU2B,EKVvB,CAAC,KAAK,EAAE,ILUsC,AKVlC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AZM1E,IECE,AKIA,CFNC,GHEG,AOUF,ADYA,CAAC,EDlBI,ACkBF,CI5BD,AHgBE,ADYA,AGHF,ICzBI,ADyBE,CCzBD,AHgBE,CAAC,GGhBC,ADyBE,CCzBD,EDyBI,CFTC,EAAE,CESC,CCzBD,ADyBE,CCzBD,CAAA,ELUD,CAAC,AIeM,CAAC,CAAC,CAAC,IJfF,AIeM,CJfL,AIeM,IJfF,CIeO,CAAC,CAAC,CAAC,SAAS,CAAA,WJfF,CAAC,OAAO,EAAE,cAAc,CAAC,KAAK,OAAO,CAAA;APJ1F,AOKA,CAAC,CAAA,ELJC,AGFA,IHEI,AMsBF,CI5BC,AJ4BA,EHxBI,AGwBF,CHxBG,AIYJ,AESA,CNrBI,CGwBA,CAAC,CCZD,AESE,CFTD,GDYK,CAAC,CCZD,ADYE,CCZD,CDYG,AGHA,EHGE,CCZD,ADYE,AGHA,CFTD,GAAG,AESE,CAAC,IFTE,CAAC,GESK,CAAC,CAAC,CAAC,CFTD,CAAA,EESK,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAA;AXnBnE,AOMA,AFPA,CAAC,CAAA,CCCE,AH4BA,CD3BD,IAAI,AULF,AJ2BA,CCZC,ADYA,EAAE,CGFD,EHEI,CI3BC,AJ2BA,CGFD,CAAC,GHEK,CAAC,EAAE,CGFD,CHEG,EAAE,AGFF,CHEG,GGFC,CCzBR,IAAI,YAAC,UDyBS,CAAC,KCzBM,ADyBD,CCzBE,CAAA,ADyBA,QAAQ,CAAC,CAAA;AXpBhD,AKDa,ACCA,AH4BA,ID3BX,AULA,CAAC,AJ2BA,CAAA,ENtBG,AGFO,ACCA,AGYT,ANgBS,CQPR,QLrBiB,CDDC,ECCE,CDDC,EIaP,KNgBc,EG5BC,CAAM,AH4BJ,EG5BM,CDDX,CAAA,ICC0B,EH4BZ,UAAkB;AH3B/D,AKAA,AGuBA,CAAC,CAAA,ENtBC,AULF,ANIE,AH4BA,CG5BC,GJCG,AIDA,AGYF,ANgBE,AQNF,IFVI,KAAK,CAAC,ANgBE,CAAC,IMhBE,CHZL,CAAC,AGYM,ANgBE,CShCtB,ANIe,CAAC,CAAA,AKsBO,ERMI,EAAE,EAAE;AH3BhC,AYLA,AJ6BA,CI1EA,AA6CC,CA7C4C,EVmD3C,AIDA,IJCI,AIDE,AH4BJ,AQNA,ILtBQ,AGYN,AEUI,ERMA,CG5BK,GGYH,ANgBE,AQNE,CFVH,EEUM,ECxEqC,AT8ErC,CAAC,CG5BK,CMLxB,ANKyB,OGYC,CHZO,AGYN,CHZO,GGYH,EAAE,KAAK,CAAC,KAAK,EAAE,ENgBI,CAAC,CAAA;AH3BpD,GOMG,CLLD,CC2BC,GD3BG,CIDD,GKsBC,GLtBK,CAAC,AGYJ,CHZK,CAAC,QGYI,EAAE,KAAK;ATXzB,AOMa,GFNV,CHCD,AC4BA,ID5BI,AKKO,CDNR,EH6BI,IG7BE,CGYH,AEUA,CLtBK,AH6BE,CG7BF,AH6BG,EQPJ,EROQ,AQPN,CJhBc,AJuBP,GIvBU,EEMX,CEUC,CFVC,IAAI,ANiBM,CAAC,CIvBO,IAAY,EAAE,KAAa,QJuBd,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AH5BnF,AKAa,AF6Bb,CAAC,CAAA,CKLE,CNvBD,AKKA,ADNA,IJCI,AKKA,AFNO,ACAP,GCMG,GDNG,EDAS,AIYb,AEUA,GNtBgB,ACAP,AGYN,EAAE,CEUC,CLtBO,CKsBL,CLtBO,CKsBL,CJhBD,AEME,CFND,CFNe,CAAM,EEMjB,CAAC,CAAA;APLvB,AG8BA,AKNa,INvBX,AKKA,AFNA,IHCI,AKKE,AFNF,ACAF,AEwBS,CHxBN,MEMQ,AFNF,ACAF,CDAG,AIYN,AEUA,EJhBU,CEMP,EAAE,CFNS,EAAE,AFNF,AGwBO,CDlBJ,AFNF,AMsBN,CNtBO,CAAC,AIYN,ADYa,AGFb,ENtBQ,CEMG,CAAC,AIgBR,CJhBQ,ADNX,CAAC,IAAI,AEyBvB,CAAS,CFzBgB,CE0BzB,CF1B2B,AE0BlB,CF1BmB,CAAA,AE2B5B,CAAS,EACT,gBAAgC,EAChC,OAAgB;AR5BlB,IECE,AKMA,ACoBA,CF3BC,GJCG,AKMA,AFPF,IAAI,CIYD,CAAC,CFLK,AEKL,CFLM,AIeN,CNtBK,CAAC,IEOM,CIeL,CJfO,CFPD,AMsBJ,CJfO,AFPF,CAAC,CAAC,CMsBH,CNtBK,OG2BxB,EAAA,KGLyB,CAAC,EAAE,CAAC,cHKG;AR1BlC,IECE,AM4BA,IN5BI,AKMF,ACsBI,CF9BC,AGaJ,GJZC,CAAC,AMsBA,GNtBG,MAAM,CAAC,EG6BQ,EH7BJ,CAAC,AG6BM,CH7BL,CAAC,CAAA,CG6BQ,EAAE,CAC9B,+BDvB0D,mCCuBQ,EAClE,EAAE,CACH,CAAA;AR/BH,IECE,AOWA,ADoBA,CCpBC,CAAC,CAAA,CPXE,AKMF,ADRA,AEiCI,CHhCH,GMsBC,GLvBK,IAAI,AEiCI,CFjCJ,EEiCO,IAAI,EAAE,CAAC,kCDzB8B,gCCyBoC,EAAE,EAAE,CAAC,CAAA;AR/BpG,IECE,AOYA,ADoBA,CFlCC,GJEG,AKMF,AC0BE,CAAC,CAAC,GHlCG,EEQA,CC0BG,AGXN,CNvBO,GMuBH,CHWO,CGXL,CHWO,CHlCC,CAAC,EGkCE,CAAC,CD1BR,AC0BS,CD1BR,AFRS,CEQR,CIeI,GJfA,AC0BS,ED1BP,CFRU,CIcC,CJdC,AGkCA,CD1BR,CAAC,AC0BS,CD1BR,CAAC,AC0BS,KD1BJ,CAAC,CAAC,EAAE,CAAC,CAAA;APN3C,AMDA,CAAC,CAAA,EJEC,AOYA,CFNC,GLNG,AOYA,ADoBF,IHlCE,AIcI,EAAE,CDoBD,CHlCD,AMuBF,IHWQ,CAAA,CGXF,EAAE,CNvBG,CAAC,AMuBF,WNvBa,CAAC,CAAC,CAAC,EAAE;ALEpC,AMAA,GH8BG,CD7BD,AKOA,CCyBC,GNhCG,AOYF,IAAI,IJdA,AMuBA,CNvBC,EIcM,CJdH,GIcO,EESF,CNvBC,CAAC,AMuBA,CFTK,GJdD,AMuBA,CNvBC,IIcQ,EAAE,GJdD,CAAC,IESU,KFTD,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;ALEhF,AG8Ba,ID7BX,AKOA,AC0BA,INjCI,AC6BO,AKIP,CAAC,ED1BE,CEKH,CJdC,GIcG,AESF,GFTK,IESE,EJdC,AEKG,AESF,CJdA,AEKG,ANiBW,CItBb,AC0BO,CAAC,CLJQ,AQRb,CFTG,CFLF,AEKG,EFLD,MAAM,AJsBa,CItBZ,AEKG,CAAC,GFLA,AIcR,CJdS,AIcR,EAAE,CHYgB,AGZf,CRQ8B,AKId,CAAC,CLJe,CItBpB,AC0BO,CD1BN,EEKK,CAAC,ANiB0B,GKInB,CD1BN,AEKG,ADqBI,CCrBH,ADqBI,CD1BN,CAAC,AEKG,ADqBI,CD1BN,CAAC,CAAC,EEKK,CAAC,CAAA,CFLD,CAAC,CAAC,EAAE,CAAC,CAAA;APPnE,AOQA,CAAC,CAAA,ELPC,AC6BA,ID7BI,AMiCF,CCrBC,ENiBI,EQRF,EHYI,EHpCE,AFgCE,CAAC,EKIA,CAAA,CLJI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA;AH7BtF,AOSA,AJqBA,CAAC,CAAA,CG9BE,CJCD,CMiCC,GNjCG,AOaF,IAAI,AEQF,INxBE,EIgBM,CAAC,GJhBD,IAAI,CIgBK,CAAC,GJhBD,CACb,AIekB,CAAC,EAAE,6GJfyF,CAAG,CAClH,CAAA;ALCT,AMAa,AH+Bb,ID9BE,AMkCA,INlCI,AIDO,AEmCL,GAAG,CCrBL,CJdC,CGmCW,CFnCE,CGcV,AEQF,ELtBe,AEmCD,CCrBT,CDqBW,AGbZ,CHaa,CCrBT,ADqBU,AGbZ,CFRG,ADqBU,CAAA,IFnCK,CAAY,AGcrB,CAAC,EEQA,EFRI,CAAC,CAAA;ATb7B,IECE,AIDA,AEmCA,INlCI,AMkCE,CHnCH,AIcA,EHdI,AEmCE,GAAO,EGbV,EHac,EAAE,CAAC,AGbZ,CHaa,CAAC,AGbZ,CHaY,CFnCZ,CAAC,EKsBI,CLtBD,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;ANC9B,AMAA,CAAC,CAAA,EJCC,AMmCA,INnCI,AOcF,ADqBE,GAAG,CCrBD,ADqBE,CHrCC,GMuBH,CNvBO,AIgBF,CAAC,ADqBE,EAAE,EGdJ,ENvBQ,AGqCA,AGdN,CNvBO,AIgBF,CAAC,AEOJ,CHcO,CAAC,EHrCE,AIgBF,ADqBE,CCrBD,ADqBE,ECrBA,KJhBO,EAAE,EGqCE,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;ARnClF,IECE,IAAI,AMmCF,IHrCE,AIgBA,CJhBC,EGqCI,CHrCD,AIgBA,AEOF,IFPM,ADqBE,CCrBD,ADqBC,IHrCG,AMuBF,CNvBG,CIgBC,AEOF,GFPK,CEOD,GFPK,CAAC,EJhBE,CAAC,CAAC,CAAC,CAAA,CIgBE,CAAC,MAAM,EAAE;ATd7C,GOSG,CLRD,CMmCC,GNnCG,CGFD,OIgBG,AEOA,MFPM,CEOC,EAAE,CFPC,GEOG,EFPE,CAAC,YEOG,CAAC,EAAE,CAAC,gBFPyB,CAAC,CAAA;ATdzD,AOSa,ILRX,AMoCA,INpCI,AKQO,AC4BP,KHvCK,AIiBJ,AEOA,INxBQ,CAAC,KAAK,CEWQ,AC4BP,GD5BU,AFXP,CGuCC,GHvCG,AGuCA,CHvCC,AGuCA,GAAG,CAAC,CD3BhC,AFZiC,IEYZ,EACrB,GFb0C,CEarB,CFbuB,CEc5C,ICyBiD,CAAC,GDzBzB,ECyB8B,CAAC,EAAE;ARpC5D,GG+BG,CD9BD,AKYA,ILZI,AKYE,ACwBJ,IHvCE,AIkBA,AEMA,CNxBC,EEeQ,ACwBJ,CHvCD,EEeQ,ECwBF,CAAA,CHvCA,CAAC,WEeS,AFfE,CEeD,AFfE,CAAC,CAAC,CAAA,CEeA,CAAC,CAAA,SEGY;ATf5C,AG+Ba,ID9BX,AKYA,CCwBC,GNpCG,AKYE,AJkBK,CEjCR,GIkBC,GFHS,CEGL,AEMF,CFNG,CFHO,EISN,EAAE,EFNI,CAAC,CNeY,AQTb,GRSgB,KIlBR,CAAC,AEGP,CAAC,EAAE,CFHQ,AEGP,ANemB,CIlBX,CAAA,QJkB6B,EAAE,KAAa;AH9B5E,IECE,AKYA,AJkBA,AKOA,INrCI,AKYE,GJkBC,AKOA,EHzCE,EGyCE,CCtBL,ADsBK,AGhBL,CNzBO,AFkCA,CAAC,CIlBG,AFhBF,CAAC,AImBN,CAAC,CFHS,AJkBF,CAChB,CEnCkB,CAAC,AImBN,AEMA,CNzBO,AImBN,CJnBO,AMyBN,ENzBQ,EMyBJ,CRUV,CMhBY,ANgBX,CMhBY,CAAC,CAAC,CAAC,CFHC,CAAC,CEGC,OFHO,CAAC,CAAA,EJmBR,CAAC,IMhBO,CAAC,CAAC,CAAC,CAAA,ENgBA,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAClF,CAAA;AHhCH,AGiCA,AKKA,CLLC,AKKA,CLLA,AKKA,ENrCC,AKaA,ILbI,EKaE,CAAC,CFjBH,AImBA,CJnBC,AImBA,CAAC,CAAA,CJnBE,AMyBF,CNzBG,CEiBK,AFjBJ,CEiBK,GIQH,EAAE,CJRO,CIQL,GNzBK,CEiBK,AFjBJ,EEiBM,CAAC,CAAA,EFjBD,CAAC,CAAA;ALI/B,AGkCA,AKKA,INtCE,AKaA,ILbI,CGJD,AImBA,CFFG,CAAC,KIQD,EJRQ,CAAC,IIQF,EJRQ,AIQN,IAAI,CJRO,EAAE,CAAC,CAAA,UIQJ,CAAC,EAAE,CAAC;AXrB/B,IECE,AKcA,ILdI,AKcE,KFnBG,AImBA,AEOJ,EJPQ,EFnBA,AImBA,CFAG,AFnBF,CAAC,KImBK,EJnBE,EAAE,AImBA,KAAK,CFAJ,CACvB,MAAM,AED6B,CFC5B,CED8B,KFCxB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,gBAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CACpF,CAAA;APhBH,IECE,AKiBA,ILjBI,GKiBG,CFtBH,AImBA,AEOA,IFPM,EFGI,CAAC,GEHD,EFGM,CAAC,AEHJ,CFGK,EAAE,CAAC,CAAA,CEHF,CAAC,IAAI,CAAC,GJnBG,CImBC,CAAC,CAAA;ATdpC,AOkBA,CAAC,CAAA,ELjBC,IAAI,IGLA,AImBA,CJnBC,GAAG,AM0BF,EFPI,CAAC,CEOD,EN1BI,AM0BF,CN1BG,GImBG,CJnBC,AImBA,CJnBC,CAAC,AM0BF,CN1BG,OAAO,AImBT,EJnBW,CAAC,CAAA,CImBF;ATdhC,AOmBA,ILlBE,IAAI,CGLD,OImBG,AEOA,IFPI,EEOE,EAAE,EFPA,AEOE,CFPD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;ATd3C,GQuCG,CNtCD,IAAI,KGNK,GM2BH,IFRqC,IAAI,CAAC,AEQjC,EAAE,GFRoC,CAAC,AEQjC,IFRqC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;ATbhF,AQuCa,GDpBV,AJeA,CDjCD,IAAI,AMsCO,IH5CP,IImBE,AEQA,EN3BI,EImBA,EJnBI,CM2BD,EAAE,CFRD,CJnBK,AImBJ,ADyBe,CH5CV,CM2BD,CHiBc,ICzBX,CAAC,KAAK,ADyBc,CCzBb,CJnBK,CAAC,CAAA,AM2BV,CAAC,CFRQ,CAAC,ADyBsB,AGjB7B,CAAC,IFRW,CAAC,CAAC;ATb5C,AOmBa,AJeA,IDjCX,AMsCA,INtCI,AKkBO,AJeA,AKKL,CH5CH,IM2BE,CHiBO,GAAG,GC1B6B,CFMpB,EJeE,AKKL,CDpBM,AENqB,AD0B1B,CC1B2B,CNqBpB,EKKH,CACxB,CC3BoD,CAAC,GFMnB,EENwB,ANqBtB,CMrBuB,GAAG,CFMJ,GENQ,CAAC,CNqBb,EAAE,EMrBgB,CAAC,KAAK,CAAC,CAAA,ANqBH,QKMzC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAI,EAC9D,OAAO,CACR,CAAA;ARzCH,IECE,AKkBA,AJeA,AKQA,CH/CC,GHMG,AKkBE,CAAC,EJeA,AKQA,CDvBG,AENN,AESA,CFTC,CAAC,CAAA,ENqBO,CAAC,IAAI,CAAC,CKQN,CDvBE,ACuBD,CDvBE,KCuBI,CLRQ,AKQP,CDvBE,AJeM,CIfL,CAAA,GCuBG,CAAC,CAAC,MAAM,ELRS,AKQP,CLRQ,MKQD,CAAC,CAAC,CAAC,CLRQ,AKQR,CLRS,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC,CAAA;AHjCxF,AGkCA,AKQA,CLRC,AKQA,CLRA,AKQA,ENzCC,AKkBA,AFxBA,IHMI,COYD,EFMI,AFxBA,CEwBC,AFxBA,CEwBC,AFxBD,GM2BF,GJHS,CIGL,EAAE,EJHQ,CAAC,GIGH,CJHO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;APlBjD,AOmBA,AFxBA,AFwCA,AKQA,CDxBC,AFxBA,CEwBA,AFxBA,EHMC,IAAI,CM0CG,IC/BE,GEUH,KAAK,EAAE,MHqBc,CAAC,AGrBR,CHqBiB,EAAE,OAAgB;AR1CzD,AOoBA,AFxBA,IHKE,AM0CA,IN1CI,GM0CG,CC/BH,IEUE,EFVI,AD+BI,CAAC,CAAC,CAAC,CC/BH,AD+BI,GAAG,AGrBN,CHqBO,CC/BH,AD+BI,AGrBN,CFVG,ED+BM,CGrBL,MHqBY,GAAG,EC/BF,AD+BI,CC/BH,AD+BI,CC/BJ,AD+BK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AR1ClD,AQ2CA,CAAC,GN1CC,IAAI,COWD,OEUG,OAAO,EAAE,IAAI,eAAM,CAAC,EAAE,CAAC;AXrB/B,AQ4CA,GDxBG,CLnBD,COWC,GPXG,CM2CG,IGtBF,cHsBoB,CAAC,QAAgB;AR3C5C,AOoBa,AERb,CAAC,CAAA,EPXC,AM2CA,IN3CI,AKmBO,GCwBJ,CGtBH,OHsBW,GDxBU,ECwBL,CDxBQ,ACwBP,IAAI,MDxBY,ECwBJ,KAAK,CAAC,CAAA,CDxBgB;APnBzD,AQ4CA,CAAC,EHhDE,CHKD,AKmBA,ILnBI,GKmBG,KIED,IJFU,AIEN,CJFO,CIEL,GAAG,YJFkB,CAAC,UAAU,CAAC,CAAA;APnB/C,AOoBA,AFxBa,CEwBZ,CAAA,CJeE,CDlCD,IAAI,AGLO,QM0BL,GN1BgB,GAAG,GM0BV,EAAE,IAAI,CN1Ba,GAAW;ALK/C,AOqBA,AJca,IDlCX,AGLA,IHKI,ACkCO,GEvCJ,IAAI,CM0BL,CN1BO,CAAC,KM0BD,CRac,CQbZ,ERae,EQbX,KN1BG,CAAC,EFuCgB,CEvCb,CAAC,CAAC,CAAC,GM0BJ,CAAC,CRa8B,CQb5B,CRa8B,AQb7B,CN1BQ,EAAE,CAAA,MFuCuC;AHlChF,AKJA,CAAC,CAAA,EHKC,ACkCA,IDlCI,GCkCG,EQbF,IRaQ,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC,CAAA;AHlCxF,AKHA,AFsCA,CAAC,CAAA,EDlCC,IAAI,ISqBA;AXrBN,AGoCA,IDnCE,IAAI,QSqBE,IAAI,EAAE,GAAG;AXrBjB,IECE,IAAI,QSqBE,MAAM,EAAE,EAAE;AXrBlB,GOqBG,AFxBA,CHID,IAAI,QSqBE,SAAS,EAAE,IAAI;AXrBvB,AOqBa,AFxBA,IHIX,IAAI,AKoBO,AFxBA,QMyBL,GNzBgB,EEwBE,CFxBC,EEwBE,CICZ,EAAE,IAAI,CNzBa,EEwBE,CFxBS,QEwBQ,EAAE,QAAyB;APpBlF,IECE,AKmBuD,AFvBvD,GAAG,CHIC,EGJE,MMyBA,OAAO,EAAE,CNzBD,CAAC,EEuBwC,AIEpC,CNzBD,CEuBqC,AFvBpC,CAAA,YMyBM,CAAC,EJFsD,AIEpD,CAAC;AXrB/B,GGoCG,CDnCD,AKmBA,AFvBA,IHII,AKmBA,GFvBG,EMyBF,ENzBM,EEuBE,CAAC,AFvBA,GAAG,CAAC,EEuBE,KAAK,CFvBC,CEuBC,AFvBA,EEuBE,GFvBG,CAAC,CAAA;ALInC,AKHA,AFuCa,CEvCZ,CAAA,EHIC,IAAI,AKmBF,AJgBS,IQdP,WRcsB,GAAG,UAAS,IIhBJ,KJgBqB;AHnCzD,AKFA,IHGE,ACmCA,IDnCI,AKmBF,OAAO,CIEH,IAAI,EAAE,EJFM,CAAC,AIEJ,eJFmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,AJgBE,EIhBA,SAAS,CAAC,CAAC,CAAC,CAAA;APnBlF,IECE,ACmCA,CIhBC,GLnBG,ACmCA,QQdE,CRcO,CAAC,IQdF,ERcQ,AQdN,EAAE,GRcS,EAAE,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;AHnC1D,IECE,AKoBA,ILpBI,AKoBA,AJeF,CIfG,MJeI,CQdH,CJDO,EAAE,CJeD,CAAA,IQdC,EAAE,IAAI;AXrBvB,GKFG,CHGD,CCmCC,GDnCG,AKoBF,OAAO,CICH,IJDQ,CAAA,IICC,EAAE,IAAI;AXrBvB,AKFa,IHGX,ACoCA,CIhBC,GLpBG,AGHO,GFuCJ,KQfD,ENxBe,EFuCL,CEvCQ,AFuCP,EQfJ,EAAE,IAAI,ENxBc,GAAW,EFuCZ,CAAC,OQfR,CAAC,EReiB,AQff,CRegB,AQff,IRemB,CAAC,SAAS,CAAC,CAAC,CAAA;AHpC9D,AGqCA,CAAC,CAAA,EDpCC,AKqBA,AFxBA,IHGI,GKqBG,AFxBA,EMwBF,ENxBM,EAAE,CAAC,EEwBE,CAAC,AFxBA,CAAC,CAAC,QAAQ,CAAC,GAAG,CEwBC,AFxBA,CEwBC,AFxBD,SEwBU,CAAC,CAAA;APrB7C,AOsBA,AFxBA,AFwCA,CIhBC,AFxBA,CEwBA,AFxBA,EHGC,IAAI,CSqBD,CAAA;AXrBL,AOuBA,AFxBA,IHEE,IAAI,ASsBF,qBAAqB;AXtBzB,IECE,IAAI,ASsBF,kCAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;AXtBxC,IECE,IAAI,ASuBF;AXvBJ,GKDG,CHED,IAAI;AFAN,AKDa,IHEX,IAAI,AGFO,UAAU,GAAG,UAAS,GAAO;ALE1C,GOuBG,CLtBD,AGFA,IHEI,GGFG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;ALE/C,AOuBa,AFxBb,CAAC,CAAA,CFuCE,CDrCD,IAAI,AKsBO,GICN,SJDkB,GAAG,UAAS,MAAc,EAAE,QAAyB;APtB9E,AKAA,AFsCa,IDrCX,AKqBmD,ILrB/C,ACqCO,AQdT,MAAM,CAAC,URcmB,GAAG,CIhBoB,AIE5B,CAAC,CJF2B,GIEvB,EAAE,ERe9B,IQfoC,EAAE,GJFsC,AJiB3D,EACjB,KAAa,EACb,UAAoB;AHxCtB,IECE,AKqBA,AJoBA,IDzCI,EKqBE,CJoBC,CQlBH,CJFK,IJoBI,CAAC,IAAI,AQlBJ,CRmBZ,CQnBc,IAAI,CJFH,CAAC,EJqBP,CAAC,GIrBY,CAAC,CAAA,YJqBI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAC5F,CAAA;AH3CH,AG4CA,CAAC,CAAA,CE5CE,CHCD,AKqBA,ILrBI,AKqBA,IIEA,IJFQ,IAAI,IIEA,EJFM,AIEJ,CJFK,GIED,GJFO,KAAK,EAAE,EAAE;APrBxC,AKAa,AF6Cb,ID5CE,IAAI,AKqBF,AFtBS,IMwBP,EJFI,CIED,EJFI,AIEF,GNxBc,CMwBV,CAAC,CNxBY,GEsBN,CAAC,MFtBc,GAAW,EMwBhB,CAAC,IJFM,AIEF,CJFG,AIEF,IAAI,CAAC,CJFG,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APrB/D,IECE,AGDA,CEsBC,GLrBG,AGDA,CMwBD,CAAC,CAAA,INxBO,GAAG,KAAK,QAAQ,EAAE;ALC/B,IECE,AKqBA,ILrBI,AGDF,AMyBA,EJHI,CAAC,CIGD,CAAC,ENzBE,EEsBI,CAAC,AFtBF,CAAA,IMyBK,CJHG,AIGF,IAAI,CJHG,AIGF,CAAC,CJHG,AIGF,CJHG,AIGH,CJHG;APrB9B,IECE,AKqBA,CFtBC,GHCG,ASwBF,IAAI,CAAC,8BAA8B,EAAE,CJHG,AIGH;AXxBzC,IECE,AKqBA,AFrBA,AMwBA,CAAC,GTxBG,GKqBG,AFrBA,SAAS,CAAC,GEqBJ,CAAC,MAAM,CAAC,CAAC,CFrBQ,CAAC,GEqBJ,AFrBO,CEqBN,AFrBO,CEqBN,AFrBO,CAAC,CEqBN,AFrBO,CEqBN,CAAA,CFrBS,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAA;ALAxD,AOsBA,AFrBA,CEqBC,AFrBA,CEqBA,AFrBA,EHAC,ASyBA,ITzBI;AFAN,AOsBa,AFpBb,IHDE,IAAI,AKqBO,eAAe,GAAG,oBAAY,CAAA;APrB3C,AOuBA,GJsBG,CD5CD,GSyBG,CTzBC;AFAN,AG6Ca,ID5CX,ASyBA,ITzBI,AC4CO,iBAAiB,GAAG,UAC/B,KQpBiB,GAAjB,CRoBiB,EACjB,KAAa,EACb,UAAoB;AH/CtB,IECE,ACgDA,IDhDI,ASyBF,GRuBK,IQvBE,ERuBI,CAAC,CQvBD,CAAC,ERuBI,AQvBF,CRwBd,AQxBe,QAAQ,CRwBd,AQxBe,CRwBd,IQxBmB,CAAC,KAAK,EAAE,CAAA,IRwBV,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAC5F,CAAA;AHlDH,AGmDA,CAAC,CAAA,CI5BE,AFrBA,CHDD,ASyBA,CAAC,GTzBG;AFAN,AOuBa,AFrBA,AFkDb,IDnDE,AS0BA,IT1BI,AKsBO,AFrBA,QAAQ,GAAG,KEqBK,GAAG,EFrBC,EAAO,MEqBC,UAAkB;APtB3D,IECE,AKsBA,AFrBA,IHDI,AGCA,GEqBG,GFrBG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KEqBH,CAAC,uBAAe,CAAC,UAAU,CAAC,CAAC,CAAA;APtBrD,AOuBA,CAAC,CAAA,ELtBC,IAAI,AGCF,OAAO,OAAK,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAG,CAAA;ALDpC,AOwBA,ILvBE,CGCC,EMyBE,CT1BC;AFAN,IECE,AS0BA,IT1BI,CGAG,IAAI,EAAE,YAAY,GM0BrB,EN1B0B,CM0B9B,CN1BgC,SM0B3B,gBAAgC;AX1BvC,IECE,IAAI,AGAF,AMyBG,INzBG,KAAK,GAAG,EAAE,CAAA,kBMyBb,EAAA,uBAAgC;AXzBvC,GOwBG,AJ4BA,CDnDD,IAAI,AGAF,AMyBA,IAAI,CNzBC,IAAI,AMyBA,CNzBC,AMyBD,GNzBI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;ALAxC,AOwBa,AJ4BA,IDnDX,IAAI,AKuBO,AJ4BA,AQ1BT,INzBE,AMyBE,KNzBG,CAAC,IAAI,CEuBY,AFvBX,CFmDY,EI5BE,CJ4BC,CQ1BR,EAAE,MJFc,CJ4BC,EEnDhB,CAAC,EAAE,CAAC,CAAC,CAAC,CEuB2B,AFvB1B,CAAC,AFmD4B,CEnD5B,CFmD8B,UAAoB;AHnDnF,IECE,AKuBA,AJ4BA,IDnDI,ACmDE,CEnDH,GFmDO,AQ1BN,EJFM,CJ4BiB,EI5Bd,AJ4BgB,AQ1BpB,CR0BoB,EQ1BjB,IAAI,CAAC,GAAG,CAAA,IJFC,CAAC,UAAU,CAAC,CAAA;APvBnC,IECE,AKuBA,AJ4BA,IDnDI,AGAF,CMyBC,KR0BO,CEnDD,AFmDE,KEnDG,CAAA,CFmDI,CAAC,UAAC,SAAiB,OI5BQ;APvB/C,IECE,AKuBA,CFvBC,GHAG,ACmDF,GI5BK,CJ4BD,CAAC,AQ3BE,IR2BE,CAAC,EI5BI,CAAC,OJ4BK,CAAC,IAAI,CAAC,EI5BI,CAAC,MJ4BI,CAAC,CAAC,CAAA,CI5BI,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APvB9D,AOwBA,AFvBA,CEuBC,AFvBA,CEuBA,AFvBA,EHAC,ACmDA,CAAC,CAAC,CAAA,CDnDE,ISwBA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AXxBpC,AOyBA,ILxBE,ACoDA,IDpDI,GCoDG,KQ5BD,CR4BO,CAAC,GQ5BH,CR4BO,CAAC,CQ3BR,IAAI,CAAC,GR2BY,AQ3BT,CR2BU,AQ3BT,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KR2Bc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAA;AHpDlE,AGqDA,CAAC,CAAA,EDpDC,IAAI,YSyBI,0BAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;AXzBrC,AGsDA,GI7BG,CLxBD,IAAI,YSyBI,8EAA8E;AXzBxF,AOyBa,ILxBX,IAAI,AKwBO,YAAY,AICf,GJDkB,UAAS,SAAiB,MIClC,CAAC,0BAAQ,CAAC,CAAC,CAAC,CAAC;AXzBjC,IECE,AKwBA,ILxBI,KKwBK,GAAG,IICJ,YJDY,CAAC,SAAS,CAAC,CAAA,IICb,CAAC,0BAAQ,CAAC,CAAC,CAAC,CAAC;AXzBjC,IECE,AKwBA,ILxBI,AKwBA,SAAS,CAAC,AICP,CAAA,KJDa,KAAK,EAAE,EAAE;APxB/B,IECE,IAAI,AKwBF,KICG,IJDM,GAAG,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APxBrE,GGsDG,CDrDD,CKwBC,GLxBG,SSwBO;AXxBb,AGsDa,IDrDX,AKwBA,ILxBI,ACqDO,GI7BJ,KIAD,IJAU,CAAA,AIAL,GAAG,ER6Be,EQ7BX,CR6Bc,AQ7Bb,GAAG,CAAC,KAAK,CR6Ba,AQ7BZ,CAAC,EAAE,CAAC,CAAC,CAAA,GR6BwB;AHrD5D,AOyBA,CAAC,CAAA,ELxBC,ACqDA,IDrDI,GCqDG,EQ7BF,IR6BQ,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHrD9E,AGsDA,CAAC,CAAA,EDrDC,IAAI,CSwBD;AXxBL,AGuDA,IDtDE,IAAI,ASyBF,cAAc;AXzBlB,IECE,IAAI,ASyBF,OAAO,yBAAO,CAAC,KAAK,CAAC,CAAA;AXzBzB,IECE,ASyBA,CAAC,GTzBG;AFAN,IECE,AS0BA,IT1BI;AFAN,IECE,IAAI;AFAN,GGuDG,CDtDD,GS0BG,CT1BC;AFAN,AGuDa,IDtDX,AS0BA,IT1BI,ACsDO,eAAe,GAAG,UAAS,AQ5B5B,GAAV,MR4BuD;AHtDzD,IECE,ACsDA,IDtDI,AS0BF,GR4BK,IQ5BE,ER4BI,CAAC,CQ5BD,CAAC,ER4BI,CAAC,IQ5BE,CAAC,IR4BM,CAAC,EQ5BA,EAAE,CAAA,UR4Ba,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHtD3E,AGuDA,CAAC,CAAA,EDtDC,AS0BA,CAAC,GT1BG;AFAN,AGwDA,IDvDE,AS2BA,IT3BI;AFAN,IECE,IAAI;AFAN,IECE,GS2BG,CT3BC;AFAN,IECE,AS2BA,IT3BI,kCS2BY,GAAhB;AX3BF,IECE,IAAI,AS2BF,IAAI,IAAI,CAAC,KAAK,EAAE;AX3BpB,GGwDG,CDvDD,IAAI,IS2BA,OAAO,IAAI,CAAC,KAAK,CAAA;AX3BvB,AGwDa,IDvDX,IAAI,ACuDO,CQ5BR,cR4BuB,GAAG,UAAS,SAAiB;AHvDzD,IECE,ACuDA,IDvDI,AS2BF,GR4BK,CQ5BC,KR4BK,CAAC,AQ5BA,GAAG,CR4BC,CAAC,EQ5BE,CAAC,MR4BM,CAAC,WQ5BW,EAAE,CAAA,CR4BE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHvD3E,AGwDA,CAAC,CAAA,EDvDC,IAAI,AS2BF,IAAI,CAAC,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAC,CAAA;AX3BxC,AGyDA,IDxDE,IAAI,AS2BF,OAAO,IAAI,CAAC,KAAK,CAAA;AX3BrB,IECE,AS2BA,CAAC,GT3BG;AFAN,IECE,AS4BA,IT5BI;AFAN,IECE,aAAa;AFAf,IECE,GS4BG,CT5BC;AFAN,GGyDG,CDxDD,AS4BA,IT5BI,oCS4Bc,GAAlB;AX5BF,AGyDa,IDxDX,IAAI,ACwDO,AQ5BT,IAAI,CAAC,IAAI,CAAC,QR4BiB,GAAG,IQ5BL,EAAE,EAAE,ER4BU,SAAiB;AHxD5D,IECE,ACwDA,IDxDI,IS4BA,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA,mBR4BwB;AHxDlE,IECE,ACwDA,IDxDI,CS4BD,gCR4BkC;AHxDvC,IECE,ACwDA,IDxDI,AS6BF,sCR2BwC,0CQ3BwC;AX7BpF,IECE,ACwDA,IDxDI,ACwDA,AQ3BF,OAAO,ER2BI,CAAC,CQ3BD,CAAC,IR2BM,KAAK,CAAC,EAAE,CQ3BA,CAAA;AX7B9B,IECE,AS6BA,CAAC,GT7BG,ACwDF,MAAM,IAAI,UAAU,CAAC,6BAA6B,CAAC,CAAA;AHxDvD,IECE,AS8BA,CR0BC,GDxDG;AFAN,IECE,ACyDA,IDzDI,ACyDE,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAA;AHzDlD,IECE,ACyDA,GQ3BG,CT9BC,ACyDA,MAAM,KAAK,IAAI,EAAE;AHzDvB,IECE,AS8BA,IT9BI,ACyDF,MAAM,IAAI,KAAK,CAAC,iBQ3BH,GAAf,UR2BgD,CAAC,CAAA;AHzDnD,IECE,CCyDC,GDzDG,AS8BF,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AX9BpC,IECE,AC0DA,ID1DI,AS8BF,GR4BK,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA,yDQ5BwD;AX9BpG,AG2DA,CAAC,CAAA,ED1DC,IAAI,AS8BF,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,oBAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AX9BpF,AG4DA,ID3DE,IAAI,IS8BA,OAAO,KAAK,CAAA;AX9BlB,IECE,IAAI,CS8BD;AX9BL,IECE,IAAI,AS+BF,IAAI;AX/BR,IECE,IAAI,IS+BA,IAAM,CAAC,GAAG,6BAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AX/BnC,IECE,IAAI,IS+BA,IAAM,+BAA+B,GACnC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAA;AXhCrF,IECE,IAAI,ISgCA,IAAI,CAAC,aAAa,GAAG,2BAAS,CAC5B,OAAO,EACP,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,+BAA+B,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,SAAS,CAChE,CAAA;AXtCP,IECE,IAAI,CSsCD;AXtCL,GG4DG,CD3DD,IAAI,ASqCA,OAAO,CAAC,EAAE;AXrChB,AG4Da,ID3DX,IAAI,AC2DO,IAAI,AQtBX,GRsBc,IQtBP,KAAK,CRuBhB,AQvBgB,ORuBD,EACf,UAAkB,EAClB,OAAqB;AH9DvB,IECE,AC+DA,ID/DI,AC+DA,CQ1BD,MR0BQ,KAAK,IAAI,EAAE;AH/DxB,IECE,IAAI,AC+DF,AQzBA,MRyBM,CQzBC,CAAC,CAAC,CRyBC,GQzBG,CAAC,KRyBK,CAAC,OQzBO,CAAA,qBRyBsB,CAAC,CAAA;AH/DtD,IECE,ASsCA,CRyBC,AQzBA,GTtCG;AFAN,IECE,ACgEA,AQzBA,ITvCI,ACgEA,WAAW,GAA8B,SAAS,CAAA;AHhExD,IECE,ACiEA,IDjEI,ACiEA,OAAO,EAAE;AHjEf,IECE,IAAI,ACiEF,WAAW,GAAG,EAAE,CAAA;AHjEpB,IECE,GSuCG,CTvCC,ACkEF,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;AHlE/B,IECE,ASuCA,ITvCI,ICkEA,kBQ3BA,GAAJ,SR2BkC,CQ3B7B,UAAkB;AXvCzB,IECE,IAAI,ASuCF,IR2BE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAA,kCQ3BqC;AXvCjG,CECC,CAAC,CAAA,KSuCE,CR2BC,kDQ3BkD;ATrCvD,AFFA,IEEM,ICkEF,AQ5BA,IR4BI,AQ5BA,CAAC,CAAC,GAAG,ER4BE,CAAC,CQ5BC,GR4BG,EAAE,UQ5BC,CAAC,CTtCgB,CSsCd,CAAC,CTtCgB,ASsChB,MTtCsB,CAAC,IAAI,CAAC;AFDvD,IEEE,ISsCE,ITtCM,ACkEJ,AQ5BE,CAAC,CAAC,ER4BA,CQ5BG,IAAI,ER4BA,CAAC,IAAI,CAAC,MAAM,CQ5BN,CAAC,ER4BS,AQ5BP,CAAC,CR4BQ,AQ5BR,ER4BU;AHnErC,IEEE,IAAI,ASsCF,IAAI,CAAC,CAAC,ER4BF,CQ5BK,IAAI,CR4BH,IAAI,UAAU,AQ5B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AAmB,CAAC,CAAA;AXnDtC,IEEE,KSkDG,ITlDM;AFDX,IEEE,IAAI,ASmDF,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,IAAI,oBAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;AXpD1D,IEEE,IAAI,ISmDA,MAAM,CAAC,IAAI,CAAC,CAAC,yCAAuC,IAAI,CAAC,UAAU,EAAI,CAAC,CAAC,CAAA;AXpD/E,GG8FG,CD5FD,IAAI,CSmDD;AXpDL,AG8Fa,ID5FX,IAAI,AC4FO,AQxCT,IAAI,GRwCY,GAAG,KQxCJ,KRyCjB,AQzCsB,KAAK,ERyCZ,AQzCc,ER0C7B,SAAiB,EACjB,KAAa,EACb,UAAoB;AHjGtB,IEEE,ACiGA,IDjGI,GCiGG,CQ7CH,KR6CS,CAAC,CQ7CH,GR6CO,CAChB,EQ9Ce,CAAC,MR8CP,AQ9Ca,CR8CZ,IQ9CiB,CAAC,CAAA,MR8CN,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,CAChG,CAAA;AHpGH,AGqGA,CAAC,CAAA,EDnGC,IAAI,CSoDD;AXrDL,AGsGA,IDpGE,IAAI,KSmDK;AXpDX,IEEE,IAAI,ISmDA,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AXpD7B,IEEE,IAAI,CSmDD;AXpDL,IEEE,ASmDA,CAAC,GTnDG;AFDN,IEEE,ASoDA,ITpDI;AFDN,IEEE,IAAI;AFDN,GGsGG,CDpGD,GSoDG,CTpDC;AFDN,AGsGa,IDpGX,ASoDA,ITpDI,ACoGO,IAAI,GAAG,UAAS,SAAiB,CQhDnC,CRgDqC,EQhD9C,QRgDgE;AHrGlE,IEEE,ACoGA,IDpGI,ASoDF,kDRgDoD,gBQhDc;AXrDtE,IEEE,ACoGA,IDpGI,ASoDF,GRgDK,IQhDE,ERgDI,CAAC,IAAI,CAAC,SAAS,CAAC,GQhDjB,CRgDqB,AQhDpB,CRgDqB,KQhDf,CAAC,IRgDwB,AQhDpB,CRgDqB,AQhDpB,GAAG,CRgDqB,AQhDpB,CRgDqB,AQhDrB,SRgD8B,CAAC,EAAE,UAAU,CAAC,IA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":"dist.256f8f1f.js","sourceRoot":"..\\src","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,null,null,null,null,null,null,null,null,null,null,null]}